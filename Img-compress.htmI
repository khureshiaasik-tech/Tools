<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta name="description" content="Free online tool to compress images with support for up to 8K resolution. Optimize your images for web with adjustable compression levels.">
    <meta name="keywords" content="image compression, 8K compression, optimize images, reduce image size, image optimizer">
    <title>ImageCompress Pro - Advanced 8K Image Compression Tool</title>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
        }
        
        body {
            background: linear-gradient(135deg, #6a11cb 0%, #2575fc 100%);
            color: #333;
            line-height: 1.6;
            min-height: 100vh;
            padding: 20px;
        }
        
        .container {
            max-width: 1200px;
            margin: 0 auto;
        }
        
        header {
            text-align: center;
            padding: 30px 0;
            color: white;
        }
        
        header h1 {
            font-size: 2.8rem;
            margin-bottom: 10px;
            text-shadow: 2px 2px 4px rgba(0, 0, 0, 0.3);
        }
        
        header p {
            font-size: 1.2rem;
            max-width: 800px;
            margin: 0 auto;
            opacity: 0.9;
        }
        
        .main-content {
            display: flex;
            flex-wrap: wrap;
            gap: 20px;
            margin-bottom: 30px;
        }
        
        .compression-tool {
            flex: 1 1 700px;
            background: white;
            border-radius: 15px;
            padding: 25px;
            box-shadow: 0 10px 30px rgba(0, 0, 0, 0.15);
        }
        
        .ad-space {
            flex: 1 1 250px;
            background: rgba(255, 255, 255, 0.9);
            border-radius: 15px;
            padding: 20px;
            display: flex;
            flex-direction: column;
            align-items: center;
            justify-content: center;
            min-height: 300px;
            box-shadow: 0 10px 30px rgba(0, 0, 0, 0.15);
        }
        
        .ad-space p {
            color: #777;
            text-align: center;
            margin-bottom: 15px;
        }
        
        .ad-unit {
            width: 100%;
            height: 250px;
            background: #f5f5f5;
            border: 2px dashed #ccc;
            display: flex;
            align-items: center;
            justify-content: center;
            color: #999;
            font-size: 0.9rem;
            text-align: center;
            padding: 15px;
        }
        
        .upload-area {
            border: 3px dashed #6a11cb;
            border-radius: 12px;
            padding: 40px 20px;
            text-align: center;
            margin-bottom: 25px;
            transition: all 0.3s;
            background: #f8f9ff;
            cursor: pointer;
        }
        
        .upload-area:hover {
            background: #eef0ff;
            border-color: #2575fc;
        }
        
        .upload-area i {
            font-size: 60px;
            color: #6a11cb;
            margin-bottom: 15px;
        }
        
        .upload-area h3 {
            font-size: 1.5rem;
            margin-bottom: 10px;
            color: #444;
        }
        
        .upload-area p {
            color: #666;
            margin-bottom: 15px;
        }
        
        .btn {
            background: linear-gradient(to right, #6a11cb, #2575fc);
            color: white;
            border: none;
            padding: 12px 25px;
            border-radius: 50px;
            font-size: 1rem;
            font-weight: 600;
            cursor: pointer;
            transition: all 0.3s;
            box-shadow: 0 4px 15px rgba(106, 17, 203, 0.3);
        }
        
        .btn:hover {
            transform: translateY(-2px);
            box-shadow: 0 6px 20px rgba(106, 17, 203, 0.4);
        }
        
        .controls {
            margin: 25px 0;
        }
        
        .control-group {
            margin-bottom: 20px;
        }
        
        .control-group label {
            display: block;
            margin-bottom: 8px;
            font-weight: 600;
            color: #444;
        }
        
        .slider-container {
            display: flex;
            align-items: center;
            gap: 15px;
        }
        
        .slider {
            flex: 1;
            -webkit-appearance: none;
            height: 8px;
            border-radius: 4px;
            background: #e0e0e0;
            outline: none;
        }
        
        .slider::-webkit-slider-thumb {
            -webkit-appearance: none;
            width: 20px;
            height: 20px;
            border-radius: 50%;
            background: #6a11cb;
            cursor: pointer;
            transition: all 0.2s;
        }
        
        .slider::-webkit-slider-thumb:hover {
            transform: scale(1.1);
        }
        
        .value-display {
            font-weight: 600;
            color: #6a11cb;
            min-width: 40px;
            text-align: center;
        }
        
        .preview-area {
            display: flex;
            flex-wrap: wrap;
            gap: 20px;
            margin-top: 30px;
        }
        
        .preview-box {
            flex: 1 1 300px;
            text-align: center;
        }
        
        .preview-box h4 {
            margin-bottom: 10px;
            color: #444;
        }
        
        .image-preview {
            width: 100%;
            height: 250px;
            border: 2px solid #eee;
            border-radius: 8px;
            overflow: hidden;
            display: flex;
            align-items: center;
            justify-content: center;
            background: #f9f9f9;
        }
        
        .image-preview img {
            max-width: 100%;
            max-height: 100%;
            object-fit: contain;
        }
        
        .stats {
            margin-top: 15px;
            font-size: 0.9rem;
            color: #666;
        }
        
        .stats div {
            margin-bottom: 5px;
        }
        
        .action-buttons {
            display: flex;
            justify-content: center;
            gap: 15px;
            margin-top: 30px;
        }
        
        .compress-btn {
            background: linear-gradient(to right, #00b09b, #96c93d);
        }
        
        .download-btn {
            background: linear-gradient(to right, #ff416c, #ff4b2b);
        }
        
        .features {
            display: flex;
            flex-wrap: wrap;
            gap: 20px;
            margin: 40px 0;
        }
        
        .feature-box {
            flex: 1 1 250px;
            background: white;
            border-radius: 12px;
            padding: 25px;
            text-align: center;
            box-shadow: 0 5px 20px rgba(0, 0, 0, 0.1);
        }
        
        .feature-box i {
            font-size: 40px;
            color: #6a11cb;
            margin-bottom: 15px;
        }
        
        .feature-box h3 {
            margin-bottom: 10px;
            color: #444;
        }
        
        footer {
            text-align: center;
            padding: 20px;
            color: white;
            margin-top: 40px;
        }
        
        footer p {
            opacity: 0.8;
        }
        
        @media (max-width: 768px) {
            .main-content {
                flex-direction: column;
            }
            
            header h1 {
                font-size: 2.2rem;
            }
            
            .preview-area {
                flex-direction: column;
            }
            
            .action-buttons {
                flex-direction: column;
            }
            
            .btn {
                width: 100%;
            }
        }
    </style>
</head>
<body>
    <div class="container">
        <header>
            <h1>ImageCompress Pro</h1>
            <p>Advanced 8K image compression tool with adjustable quality settings. Optimize your images without losing noticeable quality.</p>
        </header>
        
        <div class="main-content">
            <div class="compression-tool">
                <div class="upload-area" id="dropArea">
                    <i class="fas fa-cloud-upload-alt"></i>
                    <h3>Upload Your Image</h3>
                    <p>Drag & drop your image here or click to browse</p>
                    <p>Supports JPG, PNG, and WebP formats (up to 8K resolution)</p>
                    <input type="file" id="fileInput" accept="image/*" hidden>
                    <button class="btn" onclick="document.getElementById('fileInput').click()">Select Image</button>
                </div>
                
                <div class="controls">
                    <div class="control-group">
                        <label for="compressionLevel">Compression Level</label>
                        <div class="slider-container">
                            <input type="range" min="0" max="100" value="85" class="slider" id="compressionLevel">
                            <span class="value-display" id="compressionValue">85%</span>
                        </div>
                    </div>
                    
                    <div class="control-group">
                        <label for="resolution">Output Resolution</label>
                        <div class="slider-container">
                            <input type="range" min="10" max="100" value="100" class="slider" id="resolution">
                            <span class="value-display" id="resolutionValue">100%</span>
                        </div>
                    </div>
                    
                    <div class="control-group">
                        <label for="format">Output Format</label>
                        <select id="format" class="slider">
                            <option value="webp">WebP (Recommended)</option>
                            <option value="jpeg">JPEG</option>
                            <option value="png">PNG</option>
                        </select>
                    </div>
                </div>
                
                <div class="preview-area">
                    <div class="preview-box">
                        <h4>Original Image</h4>
                        <div class="image-preview" id="originalPreview">
                            <p>Your image will appear here</p>
                        </div>
                        <div class="stats" id="originalStats"></div>
                    </div>
                    
                    <div class="preview-box">
                        <h4>Compressed Image</h4>
                        <div class="image-preview" id="compressedPreview">
                            <p>Compressed result will appear here</p>
                        </div>
                        <div class="stats" id="compressedStats"></div>
                    </div>
                </div>
                
                <div class="action-buttons">
                    <button class="btn compress-btn" id="compressBtn">Compress Image</button>
                    <button class="btn download-btn" id="downloadBtn" disabled>Download Compressed Image</button>
                </div>
            </div>
            
            <div class="ad-space">
                <p>Advertisement Space</p>
                <div class="ad-unit">
                    <!-- Google AdSense Ad Unit -->
                    <!-- Replace with your AdSense code -->
                    <div style="width: 100%; height: 100%; display: flex; flex-direction: column; align-items: center; justify-content: center;">
                        <p>Google AdSense Ad</p>
                        <p>Ad Unit ID: <span contenteditable="true">ca-pub-example</span></p>
                    </div>
                </div>
            </div>
        </div>
        
        <div class="features">
            <div class="feature-box">
                <i class="fas fa-bolt"></i>
                <h3>Fast Compression</h3>
                <p>Compress even 8K images in seconds with our optimized algorithm</p>
            </div>
            
            <div class="feature-box">
                <i class="fas fa-chart-line"></i>
                <h3>Quality Control</h3>
                <p>Adjust compression level to find the perfect balance between size and quality</p>
            </div>
            
            <div class="feature-box">
                <i class="fas fa-lock"></i>
                <h3>Privacy Focused</h3>
                <p>All processing happens in your browser - your images never leave your computer</p>
            </div>
        </div>
        
        <footer>
            <p>&copy; 2023 ImageCompress Pro. All rights reserved.</p>
            <p>This tool uses client-side processing for your privacy and security.</p>
        </footer>
    </div>

    <script>
        // DOM Elements
        const fileInput = document.getElementById('fileInput');
        const dropArea = document.getElementById('dropArea');
        const compressionLevel = document.getElementById('compressionLevel');
        const compressionValue = document.getElementById('compressionValue');
        const resolution = document.getElementById('resolution');
        const resolutionValue = document.getElementById('resolutionValue');
        const compressBtn = document.getElementById('compressBtn');
        const downloadBtn = document.getElementById('downloadBtn');
        const originalPreview = document.getElementById('originalPreview');
        const compressedPreview = document.getElementById('compressedPreview');
        const originalStats = document.getElementById('originalStats');
        const compressedStats = document.getElementById('compressedStats');
        
        // Variables to store image data
        let originalImage = null;
        let compressedImage = null;
        
        // Update slider values
        compressionLevel.addEventListener('input', () => {
            compressionValue.textContent = `${compressionLevel.value}%`;
        });
        
        resolution.addEventListener('input', () => {
            resolutionValue.textContent = `${resolution.value}%`;
        });
        
        // File input handling
        fileInput.addEventListener('change', handleFileSelect);
        
        // Drag and drop handling
        ['dragenter', 'dragover', 'dragleave', 'drop'].forEach(eventName => {
            dropArea.addEventListener(eventName, preventDefaults, false);
        });
        
        function preventDefaults(e) {
            e.preventDefault();
            e.stopPropagation();
        }
        
        ['dragenter', 'dragover'].forEach(eventName => {
            dropArea.addEventListener(eventName, highlight, false);
        });
        
        ['dragleave', 'drop'].forEach(eventName => {
            dropArea.addEventListener(eventName, unhighlight, false);
        });
        
        function highlight() {
            dropArea.style.borderColor = '#2575fc';
            dropArea.style.backgroundColor = '#eef0ff';
        }
        
        function unhighlight() {
            dropArea.style.borderColor = '#6a11cb';
            dropArea.style.backgroundColor = '#f8f9ff';
        }
        
        dropArea.addEventListener('drop', handleDrop, false);
        
        function handleDrop(e) {
            const dt = e.dataTransfer;
            const files = dt.files;
            handleFiles(files);
        }
        
        function handleFileSelect(e) {
            const files = e.target.files;
            handleFiles(files);
        }
        
        function handleFiles(files) {
            if (files.length === 0) return;
            
            const file = files[0];
            if (!file.type.match('image.*')) {
                alert('Please select an image file.');
                return;
            }
            
            const reader = new FileReader();
            reader.onload = function(e) {
                originalImage = new Image();
                originalImage.onload = function() {
                    displayOriginalImage(originalImage, file);
                };
                originalImage.src = e.target.result;
            };
            reader.readAsDataURL(file);
        }
        
        function displayOriginalImage(img, file) {
            // Clear previous content
            originalPreview.innerHTML = '';
            
            // Create and append the image
            const imgElement = document.createElement('img');
            imgElement.src = img.src;
            originalPreview.appendChild(imgElement);
            
            // Display file info
            const sizeInMB = (file.size / (1024 * 1024)).toFixed(2);
            originalStats.innerHTML = `
                <div>Dimensions: ${img.width} × ${img.height}</div>
                <div>Size: ${sizeInMB} MB</div>
                <div>Type: ${file.type}</div>
            `;
            
            // Enable compress button
            compressBtn.disabled = false;
        }
        
        // Compression function
        compressBtn.addEventListener('click', compressImage);
        
        function compressImage() {
            if (!originalImage) return;
            
            const canvas = document.createElement('canvas');
            const ctx = canvas.getContext('2d');
            
            // Calculate new dimensions based on resolution slider
            const scaleFactor = parseInt(resolution.value) / 100;
            const newWidth = originalImage.width * scaleFactor;
            const newHeight = originalImage.height * scaleFactor;
            
            // Set canvas dimensions
            canvas.width = newWidth;
            canvas.height = newHeight;
            
            // Draw image on canvas with new dimensions
            ctx.drawImage(originalImage, 0, 0, newWidth, newHeight);
            
            // Get output format
            const format = document.getElementById('format').value;
            let mimeType;
            switch(format) {
                case 'jpeg':
                    mimeType = 'image/jpeg';
                    break;
                case 'png':
                    mimeType = 'image/png';
                    break;
                case 'webp':
                    mimeType = 'image/webp';
                    break;
                default:
                    mimeType = 'image/webp';
            }
            
            // Get compression quality (convert from % to 0-1 for WebP/JPEG)
            const quality = parseInt(compressionLevel.value) / 100;
            
            // Convert canvas to data URL with compression
            const compressedDataURL = canvas.toDataURL(mimeType, quality);
            
            // Create compressed image for preview
            compressedImage = new Image();
            compressedImage.onload = function() {
                displayCompressedImage(compressedImage, compressedDataURL);
            };
            compressedImage.src = compressedDataURL;
        }
        
        function displayCompressedImage(img, dataURL) {
            // Clear previous content
            compressedPreview.innerHTML = '';
            
            // Create and append the image
            const imgElement = document.createElement('img');
            imgElement.src = img.src;
            compressedPreview.appendChild(imgElement);
            
            // Calculate compressed size
            const compressedSizeMB = (calculateDataURLSize(dataURL) / (1024 * 1024)).toFixed(2);
            const o
